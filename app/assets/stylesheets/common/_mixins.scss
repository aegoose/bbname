@import "bootstrap/mixins";

/** Generate margins, paddings and borders for some adjustment situation
*   This mixins will generate some abbreviated classes such as ".ml-1", which means "margin-left: 1px", the same as padding.
*   The results of this mixins would like this:
*   .mt-1 { margin-top: 1px}
*   .mr-1 { margin-right: 1px}
*   .mb-1 { margin-bottom: 1px}
*   .ml-1 { margin-left: 1px}
*   ... ...
*   .pt-1 { padding-top: 1px }
*   .pr-1 { padding-right: 1px }
*   ... ...
*   .bt-1 { border-top: 1px solid $grey-border-color }
*   ... ...
*   .bl-3 { border-left 3px solid $grey-border-color }
*/
@mixin generate-margin-padding-util() {
  // $list: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 20, 25, 30;
  @media only screen and (min-width: 800px) {
    // @each $value in $list {
    @for $value from 0 through 35 {
      .mt-#{$value} {
        margin-top: #{$value}px
      }
      .mr-#{$value} {
        margin-right: #{$value}px
      }
      .mb-#{$value} {
        margin-bottom: #{$value}px
      }
      .ml-#{$value} {
        margin-left: #{$value}px
      }
      .margin-#{$value} {
        margin: #{$value}px
      }

      .pt-#{$value} {
        padding-top: #{$value}px
      }
      .pr-#{$value} {
        padding-right: #{$value}px
      }
      .pb-#{$value} {
        padding-bottom: #{$value}px
      }
      .pl-#{$value} {
        padding-left: #{$value}px
      }
      .padding-#{$value} {
        padding: #{$value}px
      }
    }
  }
  // @for $value from 0 through 10 {
  //   .bt-#{$value} {
  //     border-top: #{$value}px
  //   }
  //   .bb-#{$value} {
  //     border-bottom: #{$value}px
  //   }
  //   .bl-#{$value} {
  //     border-left: #{$value}px
  //   }
  //   .br-#{$value} {
  //     border-right: #{$value}px
  //   }
  //   .bd-#{$value} {
  //     border: #{$value}px
  //   }
  // }
  .no-bt {
    border-top: none !important
  }
  .no-br {
    border-right: none !important
  }
  .no-bb {
    border-bottom: none !important
  }
  .no-bl {
    border-left: none !important
  }
  .no-bd {
    border: none !important;
  }
}

/*
  .ft-12 { font-size: 12px }
  .ft-13 { font-size: 13px }
  ...
  .ft-48 { font-size: 48px }
*/
@mixin generate-font-sizes() {
  @for $i from 10 through 48 {
    .ft-#{$i} {
      font-size: #{$i}px !important;
    }
  }
}

@mixin generate-input-widthes($factor){
  $list: (xs:100, s: 150, m: 200, x: 300, xl:500, xxl:800);

  @media only screen and (min-width: 800px) {
    @each $n, $w in $list {
      .inp-#{$n} {
        @if $factor > 0 {
          width: #{$w*$factor}px;
        } @else {
          width: initial;
        }
      }
      .inp-xxxl{
        width: 99%;
      }
    }
  }
}


@mixin generate-span-space(){
  $list: 5, 10, 15, 20, 25, 30, 40, 50, 100, 200, 300;
  @each $n in $list {
    .span#{$n} {
      margin-left: #{$n}px;
    }
  }
}

@mixin generate-height(){
  $list: 15, 20, 25, 30, 35, 40, 50, 100, 200, 300;
  @each $n in $list {
    .h#{$n} {
      height: #{$n}px;
      line-height: #{$n}px;
    }
  }
}

@mixin generate-radius(){
  $list: 1,2,3,4,5,6,7,8,9,10,12,15,18,20;
  @each $n in $list {
    .radius-#{$n} {
      border-radius: #{$n}px;
    }
  }
}

@mixin generate-min-height(){
  $list: 50, 100, 150, 200, 300, 400, 500, 600, 700, 800;
  @each $n in $list {
    .mh#{$n} {
      min-height: #{$n}px;
    }
  }
}

@mixin generate-btn($color,$background){
  color:$color;
  background-color: $background;
  &:hover {
    color:$color;
    background: darken($background,10%);
  }
  &:focus {
    color:$color;
  }
}

@mixin generate-line-btn($color,$hoverColor:$white,$fontColor:$color){
  border-color: $color;
  color: $fontColor;
  &:hover{
    background-color: $color;
    color: $hoverColor;
  }
}

@mixin btn-hover($color, $bg-color, $border-color: $bg-color) {
  &:hover {
    color: $color;
    background-color: $bg-color;
    border-color: $border-color;
  }
}

// 业务相关

@mixin generate-sex-sizes(){
  $list: (xs:10, ss: 15, sm: 20, sx: 25, xl:50, xxl:100);
  .sex{
    @each $n, $w in $list {
      &.#{$n}{
        width: #{$w}px;
      }
    }
  }
}

@mixin generate-assets-level(){
  $list: (
    normal: #ffffff,
    welloff: #B8B8B8,
    rich: #54A952,
    million: #558DBD,
    billion: #C06DCB,
    gold: #DE732A
  );
  .assets{
    >img{
      vertical-align: text-top;
    }
    &.bg{
      @each $n, $w in $list {
        &.#{$n}, &.#{$n} > a{
          background-color: #{$w};
          color: #ffffff;
          @if $n == normal {color: #B8B8B8;}
          @if $n == welloff { color: #000000;}
        }
      }
    }

    @each $n, $w in $list {
      &.#{$n}, &.#{$n} > a{
        color: #{$w};
        @if $n == normal {color: #B8B8B8;}
        @if($n == welloff){ color: #000000;}
      }
    }
  }
}

// @mixin generate-test-for{
//   @for $i from 1 through 3{
//     .text-#{$i}{
//       font-size: 1em * $i;
//     }
//   }
// }


// @mixin generate-text-each{
//   $ary: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 20, 25;
//   @each $i in $ary{
//     .font#{$i}{
//       font-size: 1em * $i;
//     }
//   }
// }
